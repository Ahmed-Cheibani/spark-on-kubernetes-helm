# Default values for cluster-base.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
tags:
  ingress: true
  oauth2: false

rbac:
  enabled: false
  serviceAccounts: []
    # - name: myServiceAccount
    #   namespace: kube-system
  roles: []
    # - name: myRole
    #   rules:
    #   - apiGroups: [""]
    #     resources: ["services"]
    #     resourceNames: ["*"]
    #     verbs: ["get"]
  bindings: []
    # - role: myRole
    #   cluster: true
    #   subjects:
    #     - kind: ServiceAccount
    #       name: myServiceAccount
    #       namespace: kube-system

clusterIssuers:
  - name: selfsigning-issuer
    spec:
      selfSigned: {}
  # - name: letsencrypt-staging
  #   spec:
  #     acme:
  #       # You must replace this email address with your own.
  #       # Let's Encrypt will use this to contact you about expiring
  #       # certificates, and issues related to your account.
  #       email: user@example.com
  #       server: https://acme-staging-v02.api.letsencrypt.org/directory
  #       privateKeySecretRef:
  #         # Secret resource used to store the account's private key.
  #         name: example-issuer-account-key
  #       # Enable the HTTP01 challenge mechanism for this Issuer
  #       http01: {}

defaultCertificate:
  enabled: true
  issuer: selfsigning-issuer
  issuerKind: ClusterIssuer
  secretName: ingress-default-tls
  commonName: '*.my-cluster.example.com'
  domains:
  - '*.my-cluster.example.com'
  - my-cluster.example.com

cert-manager:
  enabled: true
  ingressShim:
    defaultIssuerName: selfsigning-issuer
    defaultIssuerKind: ClusterIssuer

nginx-ingress:
  controller:
    image:
      # Snapshot of 0.24.0 tag built from dev branch to support reference to basic auth secrets from namespace other than Ingress'es
      repository: sasnouskikh/nginx-ingress-controller
      tag: 0.24.0-dev
    extraArgs:
      default-ssl-certificate: kube-system/ingress-default-tls
    # service:
    #   loadBalancerIP: xxx.xxx.xxx.xxx
    #   loadBalancerSourceRanges: []

storageClasses: []
#   - name: standard
#     default: true
#     provisioner: kubernetes.io/vsphere-volume
#     parameters: 
#       diskformat: thin
#   - name: fast
#     provisioner: kubernetes.io/vsphere-volume
#     parameters: 
#       diskformat: zeroedthick

# https://github.com/pusher/oauth2_proxy#azure-auth-provider
oauth2-proxy: {}
#  config:
#    # Use an existing secret for OAuth2 credentials (see examples/oauth2-proxy-secret-example.yaml for required fields)
#    existingSecret: oauth2-proxy-secret
#    # or set secret values explicitly
#    clientID: <value>
#    clientSecret: <value>
#    cookieSecret: <value> # eg.: `openssl rand -base64 32 | head -c 32`
#
#  extraArgs:
#    provider: azure
#    # If applicable take note of your TenantID and provide it via the --azure-tenant=<YOUR TENANT ID> commandline option.
#    # Default the common tenant is used.
#    azure-tenant: <azure_tenant_id>
#    email-domain: "*"
#    upstream: file:///dev/null
#
#  ingress:
#    enabled: true
#    annotations:
#      kubernetes.io/ingress.class: nginx
#      kubernetes.io/tls-acme: "true"
#    path: /oauth2
#    hosts:
#    - cluster.example.com
#    tls:
#    - secretName: spark-cluster-tls
#      hosts:
#      - cluster.example.com
#  affinity:
#    nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        nodeSelectorTerms:
#        - matchExpressions:
#          - key: autoscale-retain
#            operator: In
#            values:
#            - "true"